{"version":3,"file":"confirm.min.js","sources":["../src/confirm.js"],"sourcesContent":["\ndefine(['jquery', 'core/modal_factory', 'core/str', 'core/modal_events', 'core/ajax', 'core/notification'],\n    function($, ModalFactory, String, ModalEvents, Ajax, Notification) {\n        var trigger = $(\".local_message_delete_button\");\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: String.get_string('delete:title', 'local_message'),\n            body: String.get_string('delete:body', 'local_message'),\n            preShowCallback: function(triggerElement, modal) {\n                triggerElement = $(triggerElement);\n                let message_id = triggerElement[0].classList[0];\n                message_id = message_id.substr(message_id.lastIndexOf('messageid') + 'messageid'.length);\n\n                modal.params = {'messageid' : message_id};\n                modal.setSaveButtonText(String.get_string('delete:button','local_message'));\n            },\n            large: true\n        } , trigger)\n            .done(function(modal) { \n                \n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    \n                    e.preventDefault();\n\n                    let footer = Y.one('.modal-footer');\n                    footer.setContent('Deleting...');\n                    let spinner = M.util.add_spinner(Y, footer);\n                    spinner.show();\n                    let request = {\n                        methodname: 'local_message_delete_message',\n                        args: modal.params,\n                    };\n                    Ajax.call([request])[0].done(function(data) {\n                        if (data === true) {\n                            // Redirect to manage page.\n                            Notification.addNotification({\n                                message: String.get_string('delete:success', 'local_message'),\n                                type: 'success',\n                            });\n                            window.location.reload();\n                        } else {\n                            Notification.addNotification({\n                                message: String.get_string('delete:failed', 'local_message'),\n                                type: 'error',\n                            });\n                        }\n                    }).fail(Notification.exception);\n\n                });\n            });\n});"],"names":["define","$","ModalFactory","String","ModalEvents","Ajax","Notification","trigger","create","type","types","SAVE_CANCEL","title","get_string","body","preShowCallback","triggerElement","modal","message_id","classList","substr","lastIndexOf","length","params","setSaveButtonText","large","done","getRoot","on","save","e","preventDefault","footer","Y","one","setContent","M","util","add_spinner","show","request","methodname","args","call","data","addNotification","message","window","location","reload","fail","exception"],"mappings":"AACAA,+BAAO,CAAC,SAAU,qBAAsB,WAAY,oBAAqB,YAAa,sBAClF,SAASC,EAAGC,aAAcC,OAAQC,YAAaC,KAAMC,kBAC7CC,QAAUN,EAAE,gCAChBC,aAAaM,OAAO,CAChBC,KAAMP,aAAaQ,MAAMC,YACzBC,MAAOT,OAAOU,WAAW,eAAgB,iBACzCC,KAAMX,OAAOU,WAAW,cAAe,iBACvCE,gBAAiB,SAASC,eAAgBC,WAElCC,YADJF,eAAiBf,EAAEe,iBACa,GAAGG,UAAU,GAC7CD,WAAaA,WAAWE,OAAOF,WAAWG,YAAY,aAAe,YAAYC,QAEjFL,MAAMM,OAAS,WAAeL,YAC9BD,MAAMO,kBAAkBrB,OAAOU,WAAW,gBAAgB,mBAE9DY,OAAO,GACPlB,SACCmB,MAAK,SAAST,OAEXA,MAAMU,UAAUC,GAAGxB,YAAYyB,MAAM,SAASC,GAE1CA,EAAEC,qBAEEC,OAASC,EAAEC,IAAI,iBACnBF,OAAOG,WAAW,eACJC,EAAEC,KAAKC,YAAYL,EAAGD,QAC5BO,WACJC,QAAU,CACVC,WAAY,+BACZC,KAAMzB,MAAMM,QAEhBlB,KAAKsC,KAAK,CAACH,UAAU,GAAGd,MAAK,SAASkB,OACrB,IAATA,MAEAtC,aAAauC,gBAAgB,CACzBC,QAAS3C,OAAOU,WAAW,iBAAkB,iBAC7CJ,KAAM,YAEVsC,OAAOC,SAASC,UAEhB3C,aAAauC,gBAAgB,CACzBC,QAAS3C,OAAOU,WAAW,gBAAiB,iBAC5CJ,KAAM,aAGfyC,KAAK5C,aAAa6C"}